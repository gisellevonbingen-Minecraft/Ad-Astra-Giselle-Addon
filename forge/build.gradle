buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

plugins {
    id "net.minecraftforge.gradle" version "5.1.+"
    id "org.parchmentmc.librarian.forgegradle" version "1.+"
}

apply plugin: "org.spongepowered.mixin"
 
version = "forge-${rootProject.mc_version}-${rootProject.mod_version}"

minecraft {
    mappings channel: "parchment", version: "${parchment_version}-${mc_version}"

    // accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "ad_astra_giselle_addon"
            args "-mixin.config=ad_astra_giselle_addon.mixin.common.json", "-mixin.config=ad_astra_giselle_addon.mixin.client.json"

            mods {
                ad_astra_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "ad_astra_giselle_addon"
            args "-mixin.config=ad_astra_giselle_addon.mixin.common.json", "-mixin.config=ad_astra_giselle_addon.mixin.client.json"

            mods {
                ad_astra_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            property "forge.enabledGameTestNamespaces", "ad_astra_giselle_addon"

            mods {
                ad_astra_giselle_addon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            args "--mod", "ad_astra_giselle_addon", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")

            mods {
                ad_astra_giselle_addon {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += "../common/src/main/java"
        }

        resources {
            srcDirs += "src/generated/resources"
            srcDirs += "../common/src/main/resources"
            srcDirs += "../common/src/generated/resources"
            exclude ".cache"
        }
    }
}

dependencies {
    // Mod
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    }

    // Ad Astra - Required
    implementation fg.deobf("curse.maven:curios-635042:${ad_astra_file}")
    implementation fg.deobf("earth.terrarium:botarium-forge-${mc_version}:${botarium_version}")
    implementation fg.deobf("com.teamresourceful.resourcefullib:resourcefullib-forge-${mc_version}:${resourcefullib_version}")
    implementation fg.deobf("com.teamresourceful.resourcefulconfig:resourcefulconfig-forge-${mc_version}:${resourcefulconfig_version}")

    // Ad Astra - Optional
    implementation fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    implementation fg.deobf("vazkii.patchouli:Patchouli:${mc_version}-${patchouli_version}")

    // Implementation
    implementation fg.deobf("curse.maven:curios-309927:${curios_file}")
    implementation fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}")
    implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:${pneumaticcraft_repressurized_file}")
    
    // Runtiem Only
    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:${top_file}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:${jade_file}")
    runtimeOnly fg.deobf("curse.maven:refined-storage-243076:${refined_storage_file}")
    runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${mc_version}-${immersive_engineering_version}")
}

def resourceTargets = ["META-INF/mods.toml"]
def intoTargets = ["$rootDir/out/production/resources/", "$rootDir/out/production/${project.name}.main/", "$rootDir/${project.name}/bin/main/"]
def replaceProperties = [mod_version: mod_version, mc_version: mc_version, forge_version: forge_version, forge_loader_version: forge_loader_version, ad_astra_version: ad_astra_version]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put "project", project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }

    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "ad_astra_giselle_addon",
                "Specification-Vendor"    : "gisellevonbingen",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "gisellevonbingen",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "ad_astra_giselle_addon.mixin.common.json, ad_astra_giselle_addon.mixin.client.json"
        ])
    }
}

jar.finalizedBy("reobfJar")
