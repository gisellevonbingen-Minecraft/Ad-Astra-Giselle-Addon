buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "org.spongepowered:mixingradle:0.7.+"
    }
}

plugins {
    id "net.minecraftforge.gradle" version "5.1.+"
    id "org.parchmentmc.librarian.forgegradle" version "1.+"
}

apply plugin: "org.spongepowered.mixin"
 
version = "forge-${rootProject.mc_version}-${rootProject.mod_version}"

sourceSets {
    main {
        java {
            srcDirs += "../common/src/main/java"
        }

        resources {
            srcDirs += "src/generated/resources"
            srcDirs += "../common/src/main/resources"
            srcDirs += "../common/src/generated/resources"
            exclude ".cache"
        }
    }
}

minecraft {
    mappings channel: "parchment", version: "${parchment_version}-${mc_version}"

    // accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        configureEach {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            taskName "forge_client"

            property "forge.enabledGameTestNamespaces", "${mod_id}"
        }

        server {
            taskName "forge_server"

            property "forge.enabledGameTestNamespaces", "${mod_id}"
        }

        gameTestServer {
            taskName "forge_game_test_server"

            property "forge.enabledGameTestNamespaces", "${mod_id}"
        }

        data {
            taskName "forge_data"

            args "--mod", "${mod_id}", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")
        }
    }
}

dependencies {
    // Mod
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_api_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"

    // Ad Astra - Required
    implementation fg.deobf("earth.terrarium.botarium:botarium-forge-${mc_version}:${botarium_version}")
    implementation fg.deobf("earth.terrarium.adastra:ad_astra-forge-${mc_version}:${ad_astra_version}")
    implementation fg.deobf("com.teamresourceful.resourcefullib:resourcefullib-forge-${mc_version}:${resourcefullib_version}")
    implementation fg.deobf("com.teamresourceful.resourcefulconfig:resourcefulconfig-forge-${mc_version}:${resourcefulconfig_version}")

    // Ad Astra - Optional
    implementation fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    compileOnly fg.deobf("dev.architectury:architectury-forge:${architectury_version}")
    compileOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")
    compileOnly fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${rei_version}")
    //implementation fg.deobf("vazkii.patchouli:Patchouli:${mc_version}-${patchouli_version}")

    // Implementation
    implementation fg.deobf("curse.maven:curios-309927:${curios_file}")
    implementation fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}")
    implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:${pneumaticcraft_repressurized_file}")

    // Runtiem Only
    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:${top_file}")
    runtimeOnly fg.deobf("curse.maven:jade-324717:${jade_file}")
    runtimeOnly fg.deobf("curse.maven:refined-storage-243076:${refined_storage_file}")
    //runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${mc_version}-${immersive_engineering_version}")
}

mixin {
    add sourceSets.main, "${mod_id}.mixin.refmap.json"
    config "${mod_id}.mixin.common.json"
    config "${mod_id}.mixin.client.json"
    config "${mod_id}.mixin.forge.common.json"
    config "${mod_id}.mixin.forge.client.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_id}",
                "Specification-Vendor"    : "gisellevonbingen",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "gisellevonbingen",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy("reobfJar")
